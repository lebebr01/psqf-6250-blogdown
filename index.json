[{"authors":["admin"],"categories":null,"content":"\nThis course aims to give students an in depth exploration of using R for data science and statistical analysis. The course is hands on where students will spend time practicing what they learn with real data to explore real problems. Students will gain experience cleaning, manipulating, visualizing, describing, exploring, and analyzing data from various perspectives. Students will also explore the benefits of reproducible analyses using R markdown documents to weave statistical code with text. Additional topics such as version control, markdown, and bootstrap will be discussed. This course will not teach you exactly what to do for every analysis, rather will attempt to give you tools to accomplish general data tasks and practice answering questions with data.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://psqf6250.brandonlebeau.org/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"This course aims to give students an in depth exploration of using R for data science and statistical analysis. The course is hands on where students will spend time practicing what they learn with real data to explore real problems.","tags":null,"title":"","type":"authors"},{"authors":["brandon"],"categories":null,"content":"\nI\u0026rsquo;m interested in computational methods, longitudinal data, and statistical software development with R. You can see more about my interests on my website: https://brandonlebeau.org/.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"a6b366d06474d85d9f788b8d18e8310d","permalink":"https://psqf6250.brandonlebeau.org/authors/brandon/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/brandon/","section":"authors","summary":"I\u0026rsquo;m interested in computational methods, longitudinal data, and statistical software development with R. You can see more about my interests on my website: https://brandonlebeau.org/.","tags":null,"title":"","type":"authors"},{"authors":null,"categories":null,"content":"Links directly to R code topics\n Reproducible Document Graphics Syntax R Basics ggplot2 Extensions Graphics Tips  ","date":1642032000,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1642032000,"objectID":"2b0562cceadd5b9e8843464c13310145","permalink":"https://psqf6250.brandonlebeau.org/rcode/","publishdate":"2022-01-13T00:00:00Z","relpermalink":"/rcode/","section":"rcode","summary":"R Course Syntax","tags":null,"title":"R Syntax","type":"book"},{"authors":null,"categories":null,"content":"A list of the data used within the course.\n UFO Data EDU01 LongitudinalEx ECLS_6250  Data Description   ECLS_6250_school  Data Description    ","date":1613606400,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1613606400,"objectID":"77c2d2ba0979ac9954ceb502de85c1ce","permalink":"https://psqf6250.brandonlebeau.org/data/","publishdate":"2021-02-18T00:00:00Z","relpermalink":"/data/","section":"data","summary":"Data for the course","tags":null,"title":"Data","type":"book"},{"authors":null,"categories":null,"content":"The course content will be organized by weeks. Each week will contain some text to:\n discuss the goals of the week the content to be covered relevant R syntax/notebook files pre-recorded videos.  Each week may also contain some information about assignments and links directly to those.\n","date":1611532800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1611532800,"objectID":"d5be68294f12f9cfecf81ad87009adc6","permalink":"https://psqf6250.brandonlebeau.org/content/","publishdate":"2021-01-25T00:00:00Z","relpermalink":"/content/","section":"content","summary":"Course Content","tags":null,"title":"Content","type":"book"},{"authors":null,"categories":null,"content":"Here you can view all of the course assignments for the semester. This will include the hands on assignments and the quizzes. The quizzes will provide a link to ICON to complete.\n","date":1610064000,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1610064000,"objectID":"5d370553e45c580541e007200292c8d8","permalink":"https://psqf6250.brandonlebeau.org/assignments/","publishdate":"2021-01-08T00:00:00Z","relpermalink":"/assignments/","section":"assignments","summary":"Course Requirements","tags":null,"title":"Course Requirements","type":"book"},{"authors":null,"categories":null,"content":"The course schedule for the semester. There will be a single page for each week of the course. These weeks will include all materials, highlight the course objectives for that week, include pre-recorded video lectures, include links to any assignments/quizzes that can be completed, lecture notes, and other external readings.\nOverview of Weekly Content  Week 1 - Rmarkdown / Reproducible Documents Week 2 - Graphics with ggplot2 Week 3 - Graphics with ggplot2 extensions  ","date":1610064000,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1610064000,"objectID":"ee8dfa775d2ca48042bf50fe0819e70c","permalink":"https://psqf6250.brandonlebeau.org/schedule/","publishdate":"2021-01-08T00:00:00Z","relpermalink":"/schedule/","section":"schedule","summary":"Course schedule","tags":null,"title":"Schedule","type":"book"},{"authors":null,"categories":null,"content":"This page contains the syllabus for the course. This syllabus is an attempt early in the semester to plan for the course. This syllabus is subject to change at the Instructors discretion.\nCourse Information PSQF 6250: Computer Packages for Statistical Analysis - Spring 2022\nInstructor Information  Brandon LeBeau, Ph.D. E-mail: brandon-lebeau at uiowa.edu Virtual Office Hours (Zoom): Tues 11 am to 12:30 pm or by appointment  See ICON for office hours zoom link   Department: Psychological and Quantitative Foundations, 361 LC  DEO: Dr. Foley Nicpon, 361 LC}    Course Quote Data does not give up their secrets easily. They must be tortured to confess. \u0026ndash; Jeff Hooper, Bell Labs\nCourse Description This course aims to give students an in depth exploration of using R for data science and statistical analysis. The course is hands on where students will spend time practicing what they learn with real data to explore real problems. Students will gain experience cleaning, manipulating, visualizing, describing, exploring, and analyzing data from various perspectives. Students will also explore the benefits of reproducible analyses using R markdown documents to weave statistical code with text. Additional topics such as version control, markdown, and Monte Carlo simulation will be discussed. This course will not teach you exactly *what to do for every analysis, rather will attempt to give you tools to accomplish general data tasks and practice answering questions with data.\nCourse Objectives By the end of the course, students should be comfortable doing the following with R:\n data visualization data manipulation data joining descriptive analysis fitting linear models reproducible data analysis  Textbook No required textbook for purchase. There will be numerous online resources that will be used for the course. These are listed below and are posted on the ICON site. Note: You can click the links below and it will take you directly to the source on ICON.\nR  R for Data Science R Markdown: The Definitive Guide  Markdown  Markdown Cheatsheet R Markdown Cheatsheet  git  git - the simple guide or git cheatsheet  Course Requirements  Online Quizzes (50 pts): Online quizzes through ICON will be given roughly every week. These will test basic knowledge of statistical programs covered in the course. Each quiz will be worth 5 points with 10 total quizzes. Quizzes will generally be due on Sunday evenings. Assignments (100 pts): Homework assignments will be used to give hands on experience with the software. These homework assignments will give you an opportunity to answer questions with data, interpret results, and receive feedback on them. Each assignment will be worth 20 points with 5 total assignments. Students are able to work in groups of up to 3 for the course assignments. If students work in groups, all students will receive the same grade. Homework, including the R source code and written responses, will be submitted electronically on ICON. Final Project Proposal (5 pts): This is a short, one page, proposal for the type of project you hope to complete. The goal of the final project proposal is to give you a chance to think about the final project earlier in the semester to get started on it. More details on what is intended in this proposal will be shared on the course website. Final Project (25 pts): The final project gives you an opportunity to use data you are interested in to answer a question of interest. You will be expected to use descriptive statistics, fit a statistical model, and create at least one figure. More specific details will be shared on the course website.  Grades   Grading: Final grades will be based on the following weighting scheme:\n Quizzes: 50 points (5 points each \u0026ndash; 10 quizzes) Assignments: 100 points (20 points each \u0026ndash; 5 assignments) Final Project Proposal: 5 pts Final Project: 25 pts    Percentage Breakdown: Guidelines are given below, plus and minus grades will be given as well. If you wish to be graded on an S/U basis, please send me an email \\textbf{before} the last day of classes (May 8, 2022).\n  A: 90% or better\n  B: 80% up to 90%\n  C: 70% up to 80%\n  D: 60% up to 70%\n  Course and University Policies  Absences: Absences happen. Therefore, I ask you to be as transparent as possible with me. I promise to be compassionate and understanding. If at any point in the semester you are having difficulties, please reach out to me and I will do my best to be accommodating and provide support, which could include an extension on course deadlines as necessary. Announcements and Communication: Any announcements regarding the course will be communicated via e-mail so please check it daily. Course materials will be posted to ICON. Go to icon.uiowa.edu for access to the ICON site. Adaptations and Modifications: Please inform me during the first two weeks if you require special adaptations or modifications to any assignment or due dates because of special circumstances such as learning disabilities, religious observances, or other appropriate needs. Contesting a Grade: To contest a grade, please send me an e-mail detailing your reason within 48 hours of receiving the grade. This allows both of us time to think, reflect, and discuss the matter without taking class time from other students. When contesting a grade, provide a copy of the graded assignment. Academic Misconduct: Plagiarism and cheating may result in grade reduction and/or serious penalties. Unless you are otherwise instructed, your work should be entirely your own. Please take care in writing your final project. You should always be writing in your own words, citing others' ideas, and quoting text as appropriate. This link provides the College of Education policy on student academic misconduct (plagiarism and cheating) https://education.uiowa.edu/coe-policies/student-academic-misconduct. Free Speech and Expression: The University of Iowa supports and upholds the First Amendment protection of freedom of speech and the principles of academic and artistic freedom. We are committed to open inquiry, vigorous debate, and creative expression inside and outside of the classroom. Visit the Free Speech at Iowa website for more information on the university’s policies on free speech and academic freedom. Accommodations for Students with Disabilities: The University is committed to providing an educational experience that is accessible to all students. If a student has a diagnosed disability or other disabling condition that may impact the student’s ability to complete the course requirements as stated in the syllabus, the student may seek accommodations through Student Disability Services (SDS). SDS is responsible for making Letters of Accommodation (LOA) available to the student. The student must provide a LOA to the instructor as early in the semester as possible, but requests not made at least two weeks prior to the scheduled activity for which an accommodation is sought may not be accommodated. The LOA will specify what reasonable course accommodations the student is eligible for and those the instructor should provide. Additional information can be found on the SDS website. Absences for Religious Holy Days: The University is prepared to make reasonable accommodations for students whose religious holy days coincide with their classroom assignments, test schedules, and classroom attendance expectations. Students must notify their instructors in writing of any such Religious Holy Day conflicts or absences within the first few days of the semester or session, and no later than the third week of the semester. If the conflict or absence will occur within the first three weeks of the semester, the student should notify the instructor as soon as possible. See Operations Manual 8.2 Absences for Religious Holy Days for additional information. Classroom Expectations: Students are expected to comply with University policies regarding appropriate classroom behavior as outlined in the Code of Student Life. While students have the right to express themselves and participate freely in class, it is expected that students will behave with the same level of courtesy and respect in the virtual class setting (whether asynchronous or synchronous) as they would in an in-person classroom. Failure to follow behavior expectations as outlined in the Code of Student Life may be addressed by the instructor and may also result in discipline under the Code of Student Life policies governing E.5 Disruptive Behavior or E.6 Failure to Comply with University Directive. Non-Discrimination Statement: The University of Iowa prohibits discrimination in employment, educational programs, and activities on the basis of race, creed, color, religion, national origin, age, sex, pregnancy, disability, genetic information, status as a U.S. veteran, service in the U.S. military, sexual orientation, gender identity, associational preferences, or any other classification that deprives the person of consideration as an individual. The university also affirms its commitment to providing equal opportunities and equal access to university facilities. For additional information on nondiscrimination policies, contact the Director, Office of Institutional Equity, the University of Iowa, 202 Jessup Hall, Iowa City, IA 52242-1316, 319-335-0705, oie-ui@uiowa.edu. Students may share their pronouns and chosen/preferred names in MyUI, which is accessible to instructors and advisors. Sexual Harassment/Sexual Misconduct and Supportive Measures: The University of Iowa prohibits all forms of sexual harassment, sexual misconduct, and related retaliation. The Policy on Sexual Harassment and Sexual Misconduct governs actions by students, faculty, staff and visitors. Incidents of sexual harassment or sexual misconduct can be reported to the Title IX and Gender Equity Office or to the Department of Public Safety. Students impacted by sexual harassment or sexual misconduct may be eligible for academic supportive measures and can learn more by contacting the Title IX and Gender Equity Office. Information about confidential resources can be found here. Watch the video for an explanation of these resources. Mental Health: Students are encouraged to be mindful of their mental health and seek help as a preventive measure or if feeling overwhelmed and/or struggling to meet course expectations. Students are encouraged to talk to their instructor for assistance with specific class-related concerns. For additional support and counseling, students are encouraged to contact University Counseling Service (UCS). Information about UCS, including resources and how to schedule an appointment, can be found at http://counseling.uiowa.edu. Find out more about UI mental health services at: http://mentalhealth.uiowa.edu. Basic Needs and Support for Students: Student Care \u0026amp; Assistance provides assistance to University of Iowa students experiencing a variety of crisis and emergency situations, including but not limited to medical issues, family emergencies, unexpected challenges, and sourcing basic needs such as food and shelter. More information on the resources related to basic needs can be found at: https://basicneeds.uiowa.edu/resources/. Students are encouraged to contact Student Care \u0026amp; Assistance in the Office of the Dean of Students (Room 135 IMU, dos-assistance@uiowa.edu or 319-335-1162) for support and assistance with resources.  ","date":1610064000,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1610064000,"objectID":"5538b9800f06ab7b29edaa22ab7e63cb","permalink":"https://psqf6250.brandonlebeau.org/syllabus/","publishdate":"2021-01-08T00:00:00Z","relpermalink":"/syllabus/","section":"syllabus","summary":"Course syllabus","tags":null,"title":"Syllabus","type":"book"},{"authors":null,"categories":null,"content":"","date":1610064000,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1610064000,"objectID":"148b0563112c2a9006e85ec08153b0ce","permalink":"https://psqf6250.brandonlebeau.org/assignments/assignment/","publishdate":"2021-01-08T00:00:00Z","relpermalink":"/assignments/assignment/","section":"assignments","summary":"Course Assignments","tags":null,"title":"Assignments","type":"book"},{"authors":null,"categories":null,"content":"Below are the course quizzes.\n Quiz 1  ","date":1610064000,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1610064000,"objectID":"9ee2f1578158bc73334dba690602f1a2","permalink":"https://psqf6250.brandonlebeau.org/assignments/quizzes/","publishdate":"2021-01-08T00:00:00Z","relpermalink":"/assignments/quizzes/","section":"assignments","summary":"Course Quizzes","tags":null,"title":"Quizzes","type":"book"},{"authors":null,"categories":null,"content":"The course project are detailed in the following pages, one for the project proposal and another for the final project requirements.\n Project Proposal Final Project  ","date":1610064000,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1610064000,"objectID":"99f302b9e9cee92740f853ade9eda986","permalink":"https://psqf6250.brandonlebeau.org/assignments/project/","publishdate":"2021-01-08T00:00:00Z","relpermalink":"/assignments/project/","section":"assignments","summary":"Course Project","tags":null,"title":"Project","type":"book"},{"authors":null,"categories":null,"content":"   We are going to start by exploring graphics with R using the midwest data. To access this data, run the following commands:\ninstall.packages(\u0026quot;tidyverse\u0026quot;) library(tidyverse) Suppose we were interested in exploring the question: How does population density influence the percentage of the population with at least a college degree? Let’s explore these data closer.\nmidwest ## # A tibble: 437 × 28 ## PID county state area poptotal popdensity popwhite popblack popamerindian ## \u0026lt;int\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; ## 1 561 ADAMS IL 0.052 66090 1271. 63917 1702 98 ## 2 562 ALEXAN… IL 0.014 10626 759 7054 3496 19 ## 3 563 BOND IL 0.022 14991 681. 14477 429 35 ## 4 564 BOONE IL 0.017 30806 1812. 29344 127 46 ## 5 565 BROWN IL 0.018 5836 324. 5264 547 14 ## 6 566 BUREAU IL 0.05 35688 714. 35157 50 65 ## 7 567 CALHOUN IL 0.017 5322 313. 5298 1 8 ## 8 568 CARROLL IL 0.027 16805 622. 16519 111 30 ## 9 569 CASS IL 0.024 13437 560. 13384 16 8 ## 10 570 CHAMPA… IL 0.058 173025 2983. 146506 16559 331 ## # … with 427 more rows, and 19 more variables: popasian \u0026lt;int\u0026gt;, popother \u0026lt;int\u0026gt;, ## # percwhite \u0026lt;dbl\u0026gt;, percblack \u0026lt;dbl\u0026gt;, percamerindan \u0026lt;dbl\u0026gt;, percasian \u0026lt;dbl\u0026gt;, ## # percother \u0026lt;dbl\u0026gt;, popadults \u0026lt;int\u0026gt;, perchsd \u0026lt;dbl\u0026gt;, percollege \u0026lt;dbl\u0026gt;, ## # percprof \u0026lt;dbl\u0026gt;, poppovertyknown \u0026lt;int\u0026gt;, percpovertyknown \u0026lt;dbl\u0026gt;, ## # percbelowpoverty \u0026lt;dbl\u0026gt;, percchildbelowpovert \u0026lt;dbl\u0026gt;, percadultpoverty \u0026lt;dbl\u0026gt;, ## # percelderlypoverty \u0026lt;dbl\u0026gt;, inmetro \u0026lt;int\u0026gt;, category \u0026lt;chr\u0026gt; This will bring up the first 10 rows of the data (hiding the additional 8,592) rows. A first common step to explore our research question is to plot the data. To do this we are going to use the R package, ggplot2, which was installed when running the install.packages command above. You can explore the midwest data by calling up the help file as well with ?midwest.\nCreate a ggplot To plot these two variables from the midwest data, we will use the function ggplot and geom_point to add a layer of points. We will treat popdensity as the x variable and percollege as the y variable.\nggplot(data = midwest) + geom_point(mapping = aes(x = popdensity, y = percollege)) Examples Try plotting popdensity by state. Try plotting county by state. Does this plot work? Bonus: Try just using the ggplot(data = midwest) from above. What do you get? Does this make sense?  Note: You should be able to modify the structure of the code above to do this.\n  Add Aesthetics Aesthetics are a way to explore more complex interactions within the data. Particularly, from the above example, lets add in the state variable to the plot via an aesthetic.\nggplot(data = midwest) + geom_point(mapping = aes(x = popdensity, y = percollege, color = state)) As you can see, we simply colored the points by the state they belong in. Does there appear to be a trend?\nExamples Using the same aesthetic structure as above, instead of using colors, make the shape of the points different for each state. Instead of color, use alpha instead. What does this do to the plot?    Global Aesthetics Above, we specified a variable to an aesthetic, which is a common use of aesthetics. However, the aesthetics can also be assigned globally. Here are two examples using the first scatterplot created.\nggplot(data = midwest) + geom_point(mapping = aes(x = popdensity, y = percollege), color = \u0026#39;pink\u0026#39;) ggplot(data = midwest) + geom_point(mapping = aes(x = popdensity, y = percollege), shape = 15) These two plots changed the aesthetics for all of the points. Notice, the suttle difference between the code for these plots and that for the plot above. The placement of the aesthetic is crucial, if it is within the parentheses for aes() then it should be assigned a variable. If it is outside, as in the last two examples, it will define the aesthetic for all the data.\nExamples Try the following command: colors(). This will print a vector of all the color names within R, try a few to find your favorites. What happens if you use the following code:  ggplot(data = midwest) + geom_point(mapping = aes(x = popdensity, y = percollege, color = \u0026#39;green\u0026#39;)) What is the problem?\n  Facets Instead of defining an aesthetic to change the color or shape of points by a third variable, we can also plot each groups data in a single plot and combine them. The process is easy with ggplot2 by using facets.\nggplot(data = midwest) + geom_point(mapping = aes(x = popdensity, y = percollege)) + facet_grid(. ~ state) You can also use facet_wrap.\nggplot(data = midwest) + geom_point(mapping = aes(x = popdensity, y = percollege)) + facet_wrap(~ state) Examples Can you facet with a continuous variable? Try it!    Geoms ggplot2 uses a grammar of graphics which makes it easy to switch different plot types (called geoms) once you are comfortable with the basic syntax. For example, how does the following plot differ from the scatterplot first generated above? What is similar?\nggplot(data = midwest) + geom_smooth(mapping = aes(x = popdensity, y = percollege)) We can also do this plot by states\nggplot(data = midwest) + geom_smooth(mapping = aes(x = popdensity, y = percollege, linetype = state), se = FALSE) What about the code above gave me the different lines for each state? Note, I also removed the standard error shading from the plot as well.\nExamples It is possible to combine geoms, which we will do next, but try it first. Try to recreate this plot.     Combining multiple geoms Combining more than one geom into a single plot is relatively straightforward, but a few considerations are important. Essentially to do the task, we just simply need to combine the two geoms we have used:\nggplot(data = midwest) + geom_point(aes(x = popdensity, y = percollege, color = state)) + geom_smooth(mapping = aes(x = popdensity, y = percollege, color = state), se = FALSE) A couple points about combining geoms, first, the order matters. In the above example, we called geom_point first, then geom_smooth. When plotting these data, the points will then be plotted first followed by the lines. Try flipping the order of the two geoms to see how the plot differs.\nWe can also simplify this code to not duplicate typing:\nggplot(data = midwest, mapping = aes(x = popdensity, y = percollege, color = state)) + geom_point() + geom_smooth(se = FALSE) Examples Can you recreate the following figure?     Other geom examples There are many other geoms available to use. To see them all, visit http://docs.ggplot2.org/current/index.html which gives examples of all the possibilities. This is a handy resource that I keep going back to.\nGeoms for single variables The introduction to plotting has been with two variables, but lets take a step back and focus on one variable with a bar chart.\nggplot(data = midwest, mapping = aes(x = state)) + geom_bar() You can also easily add aesthetics this base plot as shown before.\nggplot(data = midwest, mapping = aes(x = state)) + geom_bar(aes(fill = factor(inmetro))) A few additions can help interpretation of this plot:\nggplot(data = midwest, mapping = aes(x = state)) + geom_bar(aes(fill = factor(inmetro)), position = \u0026#39;fill\u0026#39;) ggplot(data = midwest, mapping = aes(x = state)) + geom_bar(aes(fill = factor(inmetro)), position = \u0026#39;dodge\u0026#39;) It is also possible to do a histrogram of a quantitative variable:\nggplot(data = midwest, mapping = aes(x = popdensity)) + geom_histogram() ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. You can adjust the binwidth directly:\nggplot(data = midwest, mapping = aes(x = popdensity)) + geom_histogram(binwidth = 1000)  Examples With more than two groups, histograms are difficult to interpret due to overlap. Instead, use the geom_density to create a density plot for popdensity for each state. The final plot should look similar to this:  Using geom_boxplot, create boxplots with popdensity as the y variable and state as the x variable. Bonus: facet this plot by the variable inmetro.     Plot Customization There are many many ways to adjust the look of the plot, I will discuss a few that are common.\nChange axes Axes are something that are commonly altered, particularly to give them a good name and also to alter the values shown on the axes. These are generally done with scale_x_* and scale_y_* where * is a filler based on the type of variable on the axes.\nFor example:\nggplot(data = midwest, mapping = aes(x = popdensity, y = percollege, color = state)) + geom_point() + scale_x_continuous(\u0026quot;Population Density\u0026quot;) + scale_y_continuous(\u0026quot;Percent College Graduates\u0026quot;) To change the legend title, the scale_color_discrete command can be used to adjust the color aesthetic and the variable is discrete.\nggplot(data = midwest, mapping = aes(x = popdensity, y = percollege, color = state)) + geom_point() + scale_x_continuous(\u0026quot;Population Density\u0026quot;) + scale_y_continuous(\u0026quot;Percent College Graduates\u0026quot;) + scale_color_discrete(\u0026quot;State\u0026quot;) we can also alter the breaks showing on the x-axis.\nggplot(data = midwest, mapping = aes(x = popdensity, y = percollege, color = state)) + geom_point() + scale_x_continuous(\u0026quot;Population Density\u0026quot;, breaks = seq(0, 80000, 20000)) + scale_y_continuous(\u0026quot;Percent College Graduates\u0026quot;) + scale_color_discrete(\u0026quot;State\u0026quot;)   Zoom in on plot You’ll notice that there are outliers in this scatterplot due to larger population density values for some counties. It may be of interest to zoom in on the plot. The plot can be zoomed in by using the coord_cartesian command as follows.\nggplot(data = midwest, mapping = aes(x = popdensity, y = percollege, color = state)) + geom_point() + scale_x_continuous(\u0026quot;Population Density\u0026quot;) + scale_y_continuous(\u0026quot;Percent College Graduates\u0026quot;) + scale_color_discrete(\u0026quot;State\u0026quot;) + coord_cartesian(xlim = c(0, 15000)) Note: This can also be achieved using the xlim argument to scale_x_continuous above, however this will cause some points to not be plotted. In this case it would not be a huge deal, however, if we plotted the smooth lines from before you can see the difference.\nggplot(data = midwest, mapping = aes(x = popdensity, y = percollege, color = state)) + geom_point() + geom_smooth(se = FALSE) + scale_x_continuous(\u0026quot;Population Density\u0026quot;) + scale_y_continuous(\u0026quot;Percent College Graduates\u0026quot;) + scale_color_discrete(\u0026quot;State\u0026quot;) + coord_cartesian(xlim = c(0, 15000)) ggplot(data = midwest, mapping = aes(x = popdensity, y = percollege, color = state)) + geom_point() + geom_smooth(se = FALSE) + scale_x_continuous(\u0026quot;Population Density\u0026quot;, limits = c(0, 15000)) + scale_y_continuous(\u0026quot;Percent College Graduates\u0026quot;) + scale_color_discrete(\u0026quot;State\u0026quot;) ## Warning: Removed 16 rows containing non-finite values (stat_smooth). ## Warning: Removed 16 rows containing missing values (geom_point).  ","date":1612137600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1612137600,"objectID":"5cd35ce41d8b7dd43e2b3a7c1a480ee0","permalink":"https://psqf6250.brandonlebeau.org/rcode/graphics/","publishdate":"2021-02-01T00:00:00Z","relpermalink":"/rcode/graphics/","section":"rcode","summary":"using ggplot2","tags":null,"title":"Graphics","type":"book"},{"authors":null,"categories":null,"content":"   In an attempt to get you “doing things” in R quickly, I’ve omitted a lot of discussion surrounding internal R workings. R is an object oriented language, this is much different than many other software languages.\nR works as a calculator R can be used as a calculator to do any type of addition, subtraction, multiplication, or division (among other things).\n1 + 2 - 3 ## [1] 0 5 * 7 ## [1] 35 2/1 ## [1] 2 sqrt(4) ## [1] 2 2^2 ## [1] 4 Being an object oriented system, values can directly saved within an object to be used later. As an example:\nx \u0026lt;- 1 + 3 x ## [1] 4 This can then be used later in other calculations:\nx * 3 ## [1] 12 This simplistic example is a bit too simple to show all the benefits of this approach, but will become more apparent when we start reading in data and doing more complicated data munging type tasks.\nNaming conventions This is a topic in which you will not get a single answer, but rather a different answer for everyone you ask. I prefer something called snake_case using underscores to separate words in an object. Others use titleCase as a way to distinguish words others yet use period.to.separate words in object names.\nThe most important thing is to be consistent. Pick a convention that works for you and stick with it through out. Avoiding this Mixed.TypeOf_conventions at all costs.\n  R is case sensitive This can cause problems and make debugging a bit more difficult. Be careful with typos and with case. Here is an example:\ncase_sensitive \u0026lt;- 10 Case_sensitive ## Error in eval(expr, envir, enclos) : object \u0026#39;Case_sensitive\u0026#39; not found  Functions We have already been using functions when working through creating graphics with R. A function consists of at least two parts, the function name and the arguments as follows: function_name(arg1 = num, arg2 = num). The arguments are always inside of parentheses, take on some value, and are always named. To call a function, use the function_name followed by parentheses with the arguments inside the parentheses. For example, using the rnorm function to generate values from a random normal distribution:\nset.seed(1) rnorm(n = 10, mean = 0, sd = 1) ## [1] -0.6264538 0.1836433 -0.8356286 1.5952808 0.3295078 -0.8204684 ## [7] 0.4874291 0.7383247 0.5757814 -0.3053884 Notice I called the arguments by name directly, this is good practice, however, this code will generate the same values (the values are the same because I’m using set.seed here):\nset.seed(1) rnorm(10, 0, 1) ## [1] -0.6264538 0.1836433 -0.8356286 1.5952808 0.3295078 -0.8204684 ## [7] 0.4874291 0.7383247 0.5757814 -0.3053884 The key when arguments are not called via their names is the order of the arguments. Look at ?rnorm to see that the first three arguments are indeed n, mean, and sd. When you name arguments, they can be specified in any order (generally bad practice).\nset.seed(1) rnorm(sd = 1, n = 10, mean = 0) ## [1] -0.6264538 0.1836433 -0.8356286 1.5952808 0.3295078 -0.8204684 ## [7] 0.4874291 0.7383247 0.5757814 -0.3053884 You can save this result to an object to be used later.\nset.seed(1) norm_values \u0026lt;- rnorm(n = 10, mean = 0, sd = 1) Notice the result is no longer printed to the screen, but rather is saved to the object norm_values. To see the result, you could just type norm_values in the console.\n Errors Lastly, I want to discuss errors. Errors are going to happen. Even the best programmers encounter errors that they did not anticipate and debugging needs to happen. If you encounter an error I recommend doing the following few things first:\nUse ?function_name to explore the details of the function. The examples at the bottom of every R help page can be especially helpful.\n If this does not help, copy and paste the error and search on the internet. Chances are someone else has had this error and has asked how to fix it. This is how I fix most errors I am unable to figure out with the R help.\n If these two steps still do not help, feel free to email me, but take the time to do steps 1 and 2. If you do email me, please include the following things:\n The error message directly given from R A reproducible example of the code. The reproducible example is one in which I can run the code directly with no modifications. Without this, it is much more difficult if not impossible for me to help without asking for more information.    ","date":1612137600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1612137600,"objectID":"98d43ea826bd8e4faa445fd73e95bb1b","permalink":"https://psqf6250.brandonlebeau.org/rcode/r-basics/","publishdate":"2021-02-01T00:00:00Z","relpermalink":"/rcode/r-basics/","section":"rcode","summary":"R Basics","tags":null,"title":"R Basics","type":"book"},{"authors":null,"categories":null,"content":"   Getting Started  Review the syllabus Review the schedule Install R (or use the RStudio Cloud link) - RStudio Cloud Optionally, install RSTudio Optionally, complete the course survey   Weekly Videos  Course Overview \n Course Logistics \n   ","date":1611532800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1611532800,"objectID":"89558f99477b751e4e91eb6cc7e0dd9c","permalink":"https://psqf6250.brandonlebeau.org/content/00-getting-started/","publishdate":"2021-01-25T00:00:00Z","relpermalink":"/content/00-getting-started/","section":"content","summary":"Getting Started","tags":null,"title":"Welcome","type":"book"},{"authors":null,"categories":null,"content":"Introduction This week will introduce you to Rmarkdown documents, markdown syntax, and discussion of installing R/RStudio.\nObjectives After completing this module, students will be able to:\n Define reproducible research Demonstrate code and markdown chunks Create a reproducible document template  Activities  Read R for Data Science Textbook - chapter 27 Optional reading, Reproducible Research in Education - LeBeau, Ellison \u0026amp; Aloe, in press Basic Markdown Guide Extended Markdown Syntax  Weekly Videos  Introduction to Reproducible Research    Dynamic Documents (part 1)    Dynamic Documents (part 2)   Syntax  Raw syntax for reproducible document (Rmd file)  Assignments None this week.\n","date":1611532800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1611532800,"objectID":"d1fbf25a3d7006b7a626817f4e8207b2","permalink":"https://psqf6250.brandonlebeau.org/content/01-week1/","publishdate":"2021-01-25T00:00:00Z","relpermalink":"/content/01-week1/","section":"content","summary":"Reproducible Research","tags":null,"title":"Week 1","type":"book"},{"authors":null,"categories":null,"content":"   The ggplot2 package has a robust ecosystem of many other packages that extend the functionality of ggplot2. This week, we are going to explore some of these packages in more detail, highlighting a few packages that give you additional ways to create stunning visualizations. You can see all of the extensions packages in the following ggplot2 extension website.\nWe are going to spend some time with the following packages:\n ggrepel ggforce patchwork  I also plan to discuss, gganimate, but we are going to come back to this later in the course when talking about interactive graphics.\nAll of these packages are on CRAN and you can install with the following command:\ninstall.packages(c(\u0026quot;ggrepel\u0026quot;, \u0026quot;ggforce\u0026quot;, \u0026quot;patchwork\u0026quot;)) ggrepel Let’s start by exploring the ggrepel package. This package is particularly useful when working with text labels and provides some algorithms to help with text label placement automatically. One challenge when placing text labels in a figure is that they often overlap and they also often are placed on top of the data too. ggrepel helps to solve this problem.\nTo show a motivating example, we are going to use data in this section based on penguins. To do this, we first need to install this data package.\ninstall.packages(\u0026quot;palmerpenguins\u0026quot;) The data include three different species of penguins originally collected by Dr. Kristen Gorman at the Palmer Station in Antarctica. There are a total of 344 penguins collected from 3 islands in Antarctica and include information about the species, which island, penguin measurements, and the sex of the penguin. More information about the data including artwork about the species and penguin measurements are on this page.\nHere are the penguin species and what the measurements mean, “artwork by @allison_horst”.\nlibrary(palmerpenguins) library(ggplot2) penguins ## # A tibble: 344 × 8 ## species island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g ## \u0026lt;fct\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; ## 1 Adelie Torgersen 39.1 18.7 181 3750 ## 2 Adelie Torgersen 39.5 17.4 186 3800 ## 3 Adelie Torgersen 40.3 18 195 3250 ## 4 Adelie Torgersen NA NA NA NA ## 5 Adelie Torgersen 36.7 19.3 193 3450 ## 6 Adelie Torgersen 39.3 20.6 190 3650 ## 7 Adelie Torgersen 38.9 17.8 181 3625 ## 8 Adelie Torgersen 39.2 19.6 195 4675 ## 9 Adelie Torgersen 34.1 18.1 193 3475 ## 10 Adelie Torgersen 42 20.2 190 4250 ## # … with 334 more rows, and 2 more variables: sex \u0026lt;fct\u0026gt;, year \u0026lt;int\u0026gt; Suppose we wanted to explore the bill length and flipper length with a scatter plot. We can do that with ggplot2 using the geom_point() function. I’m also using the theme_set() function to set the theme to be theme_bw() for the remainder of the notebook. I’ve also altered the theme settings by increasing the base font size from 12 to 16 so hopefully it is a bit easier to read the figure.\ntheme_set(theme_bw(base_size = 16)) ggplot(penguins, aes(x = flipper_length_mm, y = bill_length_mm)) + geom_point(size = 4) + xlab(\u0026quot;Penguin Flipper Length (in mm)\u0026quot;) + ylab(\u0026quot;Penguin Bill Length (in mm)\u0026quot;) Suppose we wished to add the species to this figure. More specifically, we want to add the species information to the points in the figure to label which points below to each penguin species. There are a few ways we could do this, we could do this by color, shape, or both.\nggplot(penguins, aes(x = flipper_length_mm, y = bill_length_mm)) + geom_point(size = 4, aes(color = species, shape = species)) + xlab(\u0026quot;Penguin Flipper Length (in mm)\u0026quot;) + ylab(\u0026quot;Penguin Bill Length (in mm)\u0026quot;) Another potential option would be to add the text labels directly to the figure and not use color. Adding text to a figure is typically done with the geom_text() function.\nggplot(penguins, aes(x = flipper_length_mm, y = bill_length_mm)) + geom_point(size = 4, aes(shape = species)) + geom_text(aes(label = species)) + xlab(\u0026quot;Penguin Flipper Length (in mm)\u0026quot;) + ylab(\u0026quot;Penguin Bill Length (in mm)\u0026quot;) Notice how the text labels overlap and the word is centered with the data point? This makes the plot unusable. We could fiddle with some settings to the geom_text() function, but the ggrepel package helps to fix this issue for us without having to guess and test. The primary difference in the code below is to use geom_text_repel() instead of geom_text(). Note, I shrunk the data point slightly in the following figure.\nlibrary(ggrepel) ggplot(penguins, aes(x = flipper_length_mm, y = bill_length_mm)) + geom_point(size = 3, aes(shape = species)) + geom_text_repel(aes(label = species)) + xlab(\u0026quot;Penguin Flipper Length (in mm)\u0026quot;) + ylab(\u0026quot;Penguin Bill Length (in mm)\u0026quot;) This isn’t actually better, but you can see the points were moved away. The issue here is that there are too many text labels to show in a single plot. I’m going to plot only 30 points, 10 from each species.\nlibrary(dplyr) set.seed(100) penguins %\u0026gt;% group_by(species) %\u0026gt;% sample_n(10) %\u0026gt;% ggplot(., aes(x = flipper_length_mm, y = bill_length_mm)) + geom_point(size = 3, aes(shape = species)) + geom_text_repel(aes(label = species)) + xlab(\u0026quot;Penguin Flipper Length (in mm)\u0026quot;) + ylab(\u0026quot;Penguin Bill Length (in mm)\u0026quot;) To see exactly what was done, I’m going to generate the same figure using geom_text().\nset.seed(100) penguins %\u0026gt;% group_by(species) %\u0026gt;% sample_n(10) %\u0026gt;% ggplot(., aes(x = flipper_length_mm, y = bill_length_mm)) + geom_point(size = 3, aes(shape = species)) + geom_text(aes(label = species)) + xlab(\u0026quot;Penguin Flipper Length (in mm)\u0026quot;) + ylab(\u0026quot;Penguin Bill Length (in mm)\u0026quot;) geom_label_repel() The ggrepel package only has two functions, the first we saw, geom_text_repel(). The second is geom_label_repel(). This works the same as geom_text_repel(), but creates a box around the text attribute.\nset.seed(100) penguins %\u0026gt;% group_by(species) %\u0026gt;% sample_n(10) %\u0026gt;% ggplot(., aes(x = flipper_length_mm, y = bill_length_mm)) + geom_point(size = 3, aes(shape = species)) + geom_label_repel(aes(label = species)) + xlab(\u0026quot;Penguin Flipper Length (in mm)\u0026quot;) + ylab(\u0026quot;Penguin Bill Length (in mm)\u0026quot;)  ggforce The ggforce package has a few powerful additions. One of these helps to solve the problem of too many text labels when using the entire penguin data and is the problem I’d like to start with.\nggplot(penguins, aes(x = flipper_length_mm, y = bill_length_mm)) + geom_point(size = 3, aes(shape = species)) + geom_text_repel(aes(label = species)) + xlab(\u0026quot;Penguin Flipper Length (in mm)\u0026quot;) + ylab(\u0026quot;Penguin Bill Length (in mm)\u0026quot;) Way too many text labels and for this example, there would be too many duplicate text labels. Since there are only three species, other ways of showing the text and groups would be helpful. ggforce helps with this problem using a series of functions that enclose data within different shapes. These functions are geom_mark_rect(), geom_mark_circle(), geom_mark_ellipse(), and geom_mark_hull() for rectangle, circle, ellipse, and hulls respectively. For an example, let’s try geom_mark_ellipse() instead of the text labels.\nlibrary(ggforce) library(tidyr) penguins %\u0026gt;% drop_na(flipper_length_mm, bill_length_mm) %\u0026gt;% ggplot(., aes(x = flipper_length_mm, y = bill_length_mm)) + geom_mark_ellipse(aes(fill = species)) + geom_point(size = 3, aes(shape = species)) + xlab(\u0026quot;Penguin Flipper Length (in mm)\u0026quot;) + ylab(\u0026quot;Penguin Bill Length (in mm)\u0026quot;) To take this one step further, we can add a text label to this figure by setting a label aesthetic to geom_mark_ellipse().\npenguins %\u0026gt;% drop_na(flipper_length_mm, bill_length_mm) %\u0026gt;% ggplot(., aes(x = flipper_length_mm, y = bill_length_mm)) + geom_mark_ellipse(aes(fill = species, label = species)) + geom_point(size = 3, aes(shape = species)) + scale_x_continuous(\u0026quot;Penguin Flipper Length (in mm)\u0026quot;) + scale_y_continuous(\u0026quot;Penguin Bill Length (in mm)\u0026quot;, limits = c(25, 70)) Another cool feature of ggforce is the ability to use something called facet zoom. Essentially, this will create a zoomed in element of a portion of your figure. For example, suppose we wanted to zoom in on the Gentoo penguins to explore their relationship between bill length and flipper length. This creates a picture in picture plotting effect.\nggplot(penguins, aes(x = flipper_length_mm, y = bill_length_mm)) + geom_point(size = 3, aes(shape = species, color = species)) + xlab(\u0026quot;Penguin Flipper Length (in mm)\u0026quot;) + ylab(\u0026quot;Penguin Bill Length (in mm)\u0026quot;) + facet_zoom(x = species == \u0026#39;Gentoo\u0026#39;)   patchwork The patchwork package is particularly helpful to combine multiple ggplot2 figures into a single figure, but you don’t want to facet. This can be useful to show multiple different relationships of attributes and combine these into a single figure element to include in a document to share.\nTo combine figure elements, basic math notation is used, including +, /, or |. There are other operators as well, but these are the primary ones we will explore and will also use parentheses to group plots together.\nFirst, let’s create a few plots that we may want to combine.\np1 \u0026lt;- ggplot(penguins, aes(x = flipper_length_mm, y = bill_length_mm)) + geom_point(size = 4, aes(color = species, shape = species)) + xlab(\u0026quot;Penguin Flipper Length (in mm)\u0026quot;) + ylab(\u0026quot;Penguin Bill Length (in mm)\u0026quot;) p1  p2 \u0026lt;- ggplot(penguins, aes(x = flipper_length_mm, y = bill_depth_mm)) + geom_point(size = 4, aes(color = species, shape = species)) + xlab(\u0026quot;Penguin Flipper Length (in mm)\u0026quot;) + ylab(\u0026quot;Penguin Bill Depth (in mm)\u0026quot;) p2 Now, we will start by using the + operator to combine plots.\nlibrary(patchwork) p1 + p2 As you can see, the plots are combined directly as generated. In the above example, we’d likely want to only have one legend instead of two. We can do this by modifying the first figure to remove the legend.\np1 \u0026lt;- ggplot(penguins, aes(x = flipper_length_mm, y = bill_length_mm)) + geom_point(size = 4, aes(color = species, shape = species)) + xlab(\u0026quot;Penguin Flipper Length (in mm)\u0026quot;) + ylab(\u0026quot;Penguin Bill Length (in mm)\u0026quot;) + theme(legend.position = \u0026#39;none\u0026#39;) p1  p1 + p2 We can use the / operator to stack plots into multiple rows.\np1 / p2 The + operator has one issue with it, it tries to keep things in a square grid, similar to how facet_wrap() works. For more advanced layout, the | operator separates columns whereas we saw above that the / operator will stack plots. Combined with parentheses, you can get more advanced layouts. First, let’s add one more figure.\np3 \u0026lt;- ggplot(drop_na(penguins, sex), aes(x = sex, y = body_mass_g)) + geom_violin(aes(fill = species), draw_quantiles = c(0.1, .5, 0.9)) + xlab(\u0026quot;Penguin Sex\u0026quot;) + ylab(\u0026quot;Penguin Body Mass (in g)\u0026quot;) + theme(legend.position = \u0026#39;none\u0026#39;) p3 p3 | (p1 / p2) Note, without parentheses, the figures may not turn out as you want.\np1 | p2 / p3 (p1 + p2) / p3  ","date":1612310400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1612310400,"objectID":"6ca2e667791f64c28f5edf60988df181","permalink":"https://psqf6250.brandonlebeau.org/rcode/ggplot2_extensions/","publishdate":"2021-02-03T00:00:00Z","relpermalink":"/rcode/ggplot2_extensions/","section":"rcode","summary":"ggplot2 extensions","tags":null,"title":"ggplot2 extensions","type":"book"},{"authors":null,"categories":null,"content":"Introduction This week will explore data visualization using ggplot2 in R.\nObjectives After completing this module, students will be able to:\n Classify different figure types by their usage Interpret different figure types Evaluate if the figure is appropriate for a given research question Create new figures  Activities  Read R for Data Science Textbook - chapters 1 \u0026ndash; 4  Weekly Videos  Introduction to Graphics with R    Adding Aesthetics    More geoms    Plot Customization    R Basics   R Syntax  Graphics Syntax R Basics  Assignments  Quiz 1 - Due January 30th, 2022  ","date":1612137600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1612137600,"objectID":"52d024887264e25c0a808c70b28505ad","permalink":"https://psqf6250.brandonlebeau.org/content/02-week2/","publishdate":"2021-02-01T00:00:00Z","relpermalink":"/content/02-week2/","section":"content","summary":"Graphics with R","tags":null,"title":"Week 2","type":"book"},{"authors":null,"categories":null,"content":"   Graphics Basics What is the story you want to tell? Is the figure misleading? Could other figure types be more effective? Does the figure show variation? Is the figure self-contained?   Misleading Graphs Data visualization is hard and it is easy to mislead, intentionally or unintentionally.\n Better Approach  Axis Labels  Axis labels are often placed on the x-axis, but for long labels this can be less effective.   Axis Labels 2  Often, the labels are rotated. Works, but is ugly and difficult to read in my opinion.   Axis Labels 3  The solution, flip x and y axis using coord_flip()!   Showing Variation  Figures depicting statistics, should show variation.   Showing Variation 2  There are multiple values for each major category, the mean is useful, but simplifies too much and could mislead.   ","date":1612310400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1612310400,"objectID":"dc1a0cf78c6a546bd632853fc62d4f3a","permalink":"https://psqf6250.brandonlebeau.org/rcode/graphics-tips/","publishdate":"2021-02-03T00:00:00Z","relpermalink":"/rcode/graphics-tips/","section":"rcode","summary":"Graphics Tips","tags":null,"title":"Graphics Tips","type":"book"},{"authors":null,"categories":null,"content":"Introduction The following week the course will continue discussing data visualization using ggplot2 by exploring a handful of useful extension packages that allows new functionality to be implemented. In addition to the new extension packages, some graphical creation tips will be shared.\nObjectives After completing this module, students will be able to:\n Engage with the ggplot2 extension packages Create new figures using the ggplot2 extension packages Evaluate and implement appropriate data visualization standards  Activities  Fundamentals of Data Visualization - chapters 17 \u0026ndash; 26  Weekly Videos  ggrepel    ggforce    patchwork    Graphics Tips   R Syntax  ggplot2 extensions Graphics Tips  Assignments  Quiz 2 - To come \u0026hellip;  ","date":1612310400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1612310400,"objectID":"a45a23bf966f2b7c885958051528505d","permalink":"https://psqf6250.brandonlebeau.org/content/03-week3/","publishdate":"2021-02-03T00:00:00Z","relpermalink":"/content/03-week3/","section":"content","summary":"ggplot2 Extension Packages","tags":null,"title":"Week 3","type":"book"},{"authors":null,"categories":null,"content":"   I want to talk very briefly about R scripts. You may have been using these already within your workflow for this course, but these are best practice instead of simply running code in the console. Creating R scripts are a crucial step to ensure the data analyses are reproducible, the script will act as a log of all the things that are done to the data to go from data import to any outputs (model results, tables, figures, etc.).\nTo create an R script with RStudio, the short cut is CTRL/CMD + SHIFT + N. You can also create a new script by going to File \u0026gt; New File \u0026gt; R Script. Both of these commands will open up a blank script window.\nIn this script window, I would recommend loading any R packages first at the top of the file. Then proceed with the analysis. Commands can be sent to the console using CRTL/CMD + ENTER. By default RStudio will run any commands that span more than one line with a single CRTL/CMD + ENTER call.\nFor more details about R Scripts, the R for Data Science text has detail with screenshots in Chapter 6. I recommend trying to create a simple script and sending these commands from the script to the console to be run with R.\n","date":1612742400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1612742400,"objectID":"4a1498dfe51443e4f8fbba8d0304ae58","permalink":"https://psqf6250.brandonlebeau.org/rcode/r_scripts/","publishdate":"2021-02-08T00:00:00Z","relpermalink":"/rcode/r_scripts/","section":"rcode","summary":"R Scripts","tags":null,"title":"R Scripts","type":"book"},{"authors":null,"categories":null,"content":"Quiz 1 can be taken on ICON, due January 30th, 2021. The quiz covers content from Week 1.\nQuiz 1 Link\n","date":1643068800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1643068800,"objectID":"ac83706d5690d70e2da1268514b156a4","permalink":"https://psqf6250.brandonlebeau.org/assignments/quizzes/quiz1/","publishdate":"2022-01-25T00:00:00Z","relpermalink":"/assignments/quizzes/quiz1/","section":"assignments","summary":"Quiz 1 can be taken on ICON, due January 30th, 2021. The quiz covers content from Week 1.\nQuiz 1 Link","tags":null,"title":"Quiz 1","type":"book"}]